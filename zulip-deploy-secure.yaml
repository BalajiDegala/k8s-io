
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zulip-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  hostPath:
    path: /data/zulip

---


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zulip-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-storage

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: zulip
spec:
  selector:
    app: postgres
  ports:
    - name: db
      port: 5432
      targetPort: 5432
---

apiVersion: v1
kind: Service
metadata:
  name: zulip
  namespace: zulip
spec:
  selector:
    app: zulip
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zulip-postgres-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  hostPath:
    path: /data/zulip_postgres

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: zulip-redis-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  hostPath:
    path: /data/zulip_redis

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: zulip-rabbitmq-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  hostPath:
    path: /data/zulip_rabbitmq

---

# Secrets for Passwords
apiVersion: v1
kind: Secret
metadata:
  name: zulip-secrets
  namespace: zulip
type: Opaque
stringData:
  postgres_password: REPLACE_WITH_SECURE_POSTGRES_PASSWORD
  redis_password: REPLACE_WITH_SECURE_REDIS_PASSWORD
  memcached_password: REPLACE_WITH_SECURE_MEMCACHED_PASSWORD
  rabbitmq_password: REPLACE_WITH_SECURE_RABBITMQ_PASSWORD
  zulip_secret_key: REPLACE_WITH_SECURE_SECRET_KEY

---

# PostgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: zulip/zulip-postgresql:14
          env:
            - name: POSTGRES_DB
              value: zulip
            - name: POSTGRES_USER
              value: zulip
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: postgres_password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: zulip-postgres-pvc

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zulip-postgres-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-storage

---

# Redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:alpine
          command: ["sh", "-euc", "echo \"requirepass '$$REDIS_PASSWORD'\" > /etc/redis.conf && exec redis-server /etc/redis.conf"]
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: redis_password
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: zulip-redis-pvc

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zulip-redis-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage

---

# RabbitMQ
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:4.0.7
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: zulip
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: rabbitmq_password
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: zulip-rabbitmq-pvc

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zulip-rabbitmq-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage

---

# Memcached
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: memcached
  template:
    metadata:
      labels:
        app: memcached
    spec:
      containers:
        - name: memcached
          image: memcached:alpine
          command: ["sh", "-euc", "echo 'mech_list: plain' > $$SASL_CONF_PATH && echo \"zulip@$$HOSTNAME:$$MEMCACHED_PASSWORD\" > $$MEMCACHED_SASL_PWDB && echo \"zulip@localhost:$$MEMCACHED_PASSWORD\" >> $$MEMCACHED_SASL_PWDB && exec memcached -S"]
          env:
            - name: SASL_CONF_PATH
              value: /home/memcache/memcached.conf
            - name: MEMCACHED_SASL_PWDB
              value: /home/memcache/memcached-sasl-db
            - name: MEMCACHED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: memcached_password

---

# Zulip
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zulip
  namespace: zulip
spec:
  template:
    spec:
      securityContext:
        fsGroup: 1000
  replicas: 1
  selector:
    matchLabels:
      app: zulip
  template:
    metadata:
      labels:
        app: zulip
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /data"]
        volumeMounts:
          - name: zulip-storage
            mountPath: /data
      containers:
        - name: zulip
          image: zulip/docker-zulip:10.3-0
          env:
            - name: DB_HOST
              value: postgres
            - name: DB_HOST_PORT
              value: "5432"
            - name: DB_USER
              value: zulip
            - name: SECRETS_postgres_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: postgres_password
            - name: SETTING_REDIS_HOST
              value: redis
            - name: SECRETS_redis_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: redis_password
            - name: SETTING_MEMCACHED_LOCATION
              value: memcached:11211
            - name: SECRETS_memcached_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: memcached_password
            - name: SETTING_RABBITMQ_HOST
              value: rabbitmq
            - name: SECRETS_rabbitmq_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: rabbitmq_password
            - name: SECRETS_secret_key
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: zulip_secret_key
            - name: SETTING_EXTERNAL_HOST
              value: zulip.d2-india.com
            - name: SETTING_ZULIP_ADMINISTRATOR
              value: balajid@d2.com
            - name: SSL_CERTIFICATE_GENERATION
              value: none
            - name: SETTING_USE_X_FORWARDED_HOST
              value: "True"
            - name: SETTING_X_FORWARDED_PROTO
              value: "https"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: zulip-storage
              mountPath: /data
      volumes:
        - name: zulip-storage
          persistentVolumeClaim:
            claimName: zulip-pvc


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zulip-ingress
  namespace: zulip
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - zulip.d2-india.com
      secretName: zulip-tls  
  rules:
    - host: zulip.d2-india.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: zulip
                port:
                  number: 80
