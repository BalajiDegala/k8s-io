---
apiVersion: v1
kind: Namespace
metadata:
  name: zulip
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: zulip-storage-class
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: zulip-secrets
  namespace: zulip
type: Opaque
data:
  postgres-password: cG9zdGdyZXM=
  memcached-password: bWVtY2FjaGVk
  rabbitmq-password: cmFiYml0bXE=
  redis-password: cmVkaXM=
  zulip-secret-key: enVsaXA=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: zulip-storage-class
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: memcached-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: zulip-storage-class
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: zulip-storage-class
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: zulip-storage-class
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zulip-pvc
  namespace: zulip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: zulip-storage-class
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: zulip/zulip-postgresql:14
          env:
            - name: POSTGRES_DB
              value: "zulip"
            - name: POSTGRES_USER
              value: "zulip"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: postgres-password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-storage
      volumes:
        - name: postgresql-storage
          persistentVolumeClaim:
            claimName: postgresql-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgresql-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: zulip-storage-class
  hostPath:
    path: /data/zulip-postgresql
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: memcached-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: zulip-storage-class
  hostPath:
    path: /data/zulip-memcached
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: rabbitmq-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: zulip-storage-class
  hostPath:
    path: /data/zulip-rabbitmq
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: zulip-storage-class
  hostPath:
    path: /data/zulip-redis
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zulip-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: zulip-storage-class
  hostPath:
    path: /data/zulip
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: zulip
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: memcached
  template:
    metadata:
      labels:
        app: memcached
    spec:
      containers:
        - name: memcached
          image: memcached:alpine
          args: ["-S"]
          env:
            - name: MEMCACHED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: memcached-password
          volumeMounts:
            - mountPath: /home/memcache
              name: memcached-storage
      volumes:
        - name: memcached-storage
          persistentVolumeClaim:
            claimName: memcached-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: memcached
  namespace: zulip
spec:
  selector:
    app: memcached
  ports:
    - protocol: TCP
      port: 11211
      targetPort: 11211
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.12.14
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "zulip"
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: rabbitmq-password
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-storage
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: zulip
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:alpine
          args: ["--requirepass", "$(REDIS_PASSWORD)"]
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: redis-password
          volumeMounts:
            - mountPath: /data
              name: redis-storage
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: zulip
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zulip
  namespace: zulip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zulip
  template:
    metadata:
      labels:
        app: zulip
    spec:
      containers:
        - name: zulip
          image: zulip/docker-zulip:9.4-0
          env:
            # Add these two environment variables
            - name: SSL_CERTIFICATE_GENERATION
              value: "self-signed"
            - name: DISABLE_HTTPS
              value: "true"
            # Existing environment variables
            - name: DB_HOST
              value: "postgresql"
            - name: DB_HOST_PORT
              value: "5432"
            - name: DB_USER
              value: "zulip"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: postgres-password
            - name: SETTING_MEMCACHED_LOCATION
              value: "memcached:11211"
            - name: SETTING_RABBITMQ_HOST
              value: "rabbitmq"
            - name: SETTING_REDIS_HOST
              value: "redis"
            - name: SECRETS_email_password
              value: "123456789"
            - name: SECRETS_rabbitmq_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: rabbitmq-password
            - name: SECRETS_postgres_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: postgres-password
            - name: SECRETS_memcached_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: memcached-password
            - name: SECRETS_redis_password
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: redis-password
            - name: SECRETS_secret_key
              valueFrom:
                secretKeyRef:
                  name: zulip-secrets
                  key: zulip-secret-key
            - name: SETTING_EXTERNAL_HOST
              value: "zulip.d2-india.com"
            - name: SETTING_ZULIP_ADMINISTRATOR
              value: "balajidegalas@gmail.com"
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - mountPath: /data
              name: zulip-storage
      volumes:
        - name: zulip-storage
          persistentVolumeClaim:
            claimName: zulip-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: zulip
  namespace: zulip
spec:
  selector:
    app: zulip
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zulip-ingress
  namespace: zulip
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: zulip.d2-india.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: zulip
            port:
              number: 80


# kubectl create secret tls zulip-tls-secret \
#   --cert=certificate.crt \
#   --key=private.key \
#   -n zulip
