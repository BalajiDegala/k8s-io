✅ Full Production-Level Ingress with HTTPS (Rocky9 / Linux)
🔧 Step-by-Step for Local Network TLS
🛠️ 1. Install mkcert on Rocky Linux 9

sudo dnf install nss-tools -y
curl -JLO "https://github.com/FiloSottile/mkcert/releases/latest/download/mkcert-v1.4.4-linux-amd64"
chmod +x mkcert-v1.4.4-linux-amd64
sudo mv mkcert-v1.4.4-linux-amd64 /usr/local/bin/mkcert

Trust the local CA:

mkcert -install

This installs a locally-trusted root CA into your Linux system trust store (and your browser).
📜 2. Generate TLS Certs for your domain

mkcert ayon.local

It creates:

    ayon.local.pem (certificate)

    ayon.local-key.pem (private key)

🔐 3. Create a TLS Secret in Kubernetes

kubectl create secret tls ayon-tls-secret \
  --cert=ayon.local.pem \
  --key=ayon.local-key.pem \
  -n ayon

📶 4. Add ayon.local to /etc/hosts

sudo nano /etc/hosts

Add this line:

192.168.1.240 ayon.local

✅ Make sure this is done on any client machine trying to access https://ayon.local.
🌐 5. NGINX Ingress and MetalLB Setup

If you haven’t already:
a. Install MetalLB:

kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.7/config/manifests/metallb-native.yaml

Then create this config (adjust IP range as needed):

# metallb-config.yaml
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: pool
  namespace: metallb-system
spec:
  addresses:
    - 192.168.1.240-192.168.1.250

---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: advert
  namespace: metallb-system

Apply it:

kubectl apply -f metallb-config.yaml

b. Deploy NGINX Ingress Controller:

helm install ingress-nginx ingress-nginx/ingress-nginx \
  --namespace ingress-nginx --create-namespace \
  --set controller.service.type=LoadBalancer \
  --set controller.service.loadBalancerIP=192.168.1.240

🚪 6. Ingress YAML with TLS

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ayon-ingress
  namespace: ayon
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - ayon.local
      secretName: ayon-tls-secret
  rules:
    - host: ayon.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ayon-frontend-service
                port:
                  number: 80

🧪 Test It

In your browser:

https://ayon.local

    ✅ Should show as secure 🧠 mkcert-generated cert is trusted by your system (not a real CA, but good for internal use)

⚠️ Heads-Up for Rocky Linux Browsers

If you're using Firefox, it doesn't use system trust store by default. You'll need to import the CA manually:

firefox → Preferences → Privacy & Security → Certificates → View Certificates → Authorities → Import

Import this file:

~/.local/share/mkcert/rootCA.pem

Let me know if you want:

    All these steps bundled as shell scripts

    Ingress YAML auto-generated

    mkcert CA shared with other internal servers

Happy to help 👨‍💻
