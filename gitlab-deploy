apiVersion: v1
kind: Namespace
metadata:
  name: gitlab

---
# Storage Class
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gitlab-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
# Persistent Volumes for GitLab, PostgreSQL, and Redis
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gitlab-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: gitlab-storage
  hostPath:
    path: /data/gitlab

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: git-postgres-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: gitlab-storage
  hostPath:
    path: /data/postgres

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: git-redis-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: gitlab-storage
  hostPath:
    path: /data/redis

---
# Persistent Volume Claims for GitLab, PostgreSQL, and Redis
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gitlab-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: git-postgres-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gitlab-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: git-redis-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gitlab-storage

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6.0
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: git-redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: gitlab
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
  type: ClusterIP

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14  # Changed from postgres:13 to postgres:14
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: gitlab
            - name: POSTGRES_PASSWORD
              value: gitlabpassword
            - name: POSTGRES_DB
              value: gitlabhq_production
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: git-postgres-pvc


---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: gitlab
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
  type: ClusterIP

---
# GitLab Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      containers:
        - name: gitlab
          image: gitlab/gitlab-ce:latest
          ports:
            - containerPort: 80
            - containerPort: 22
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                external_url 'http://gitlab.d2-india.com'
                gitlab_rails['db_adapter'] = 'postgresql'
                gitlab_rails['db_encoding'] = 'unicode'
                gitlab_rails['db_host'] = 'postgres'
                gitlab_rails['db_port'] = 5432
                gitlab_rails['db_username'] = 'gitlab'
                gitlab_rails['db_password'] = 'gitlabpassword'
                gitlab_rails['redis_host'] = 'redis'
                gitlab_rails['redis_port'] = 6379
          volumeMounts:
            - mountPath: /var/opt/gitlab
              name: gitlab-data
      volumes:
        - name: gitlab-data
          persistentVolumeClaim:
            claimName: gitlab-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: gitlab-service
  namespace: gitlab
spec:
  selector:
    app: gitlab
  ports:
    - nodePort: 30050
      port: 80
      targetPort: 80
      name: http
    - nodePort: 30051
      port: 22
      targetPort: 22
      name: ssh
  type: NodePort

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # name of the ClusterRole
  name: gitlab-k8s-access
rules:
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs: ["list", "get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-k8s-access-binding
subjects:
- kind: ServiceAccount
  name: default
  namespace: gitlab
roleRef:
  kind: ClusterRole
  name: gitlab-k8s-access
  apiGroup: rbac.authorization.k8s.io

