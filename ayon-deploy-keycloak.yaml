---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloak-postgres-pv
spec:
  capacity:
    storage: 5Gi
  accessModes: [ReadWriteOnce]
  storageClassName: local-storage
  hostPath:
    path: /data/keycloak-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-postgres-pvc
  namespace: ayon
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-postgres-secret
  namespace: ayon
type: Opaque
data:
  POSTGRES_USER: a2V5Y2xvYWs=  # base64 of 'keycloak'
  POSTGRES_PASSWORD: a2V5Y2xvYWs=  # base64 of 'keycloak'
  POSTGRES_DB: a2V5Y2xvYWs=  # base64 of 'keycloak'
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgres
  namespace: ayon
spec:
  selector:
    app: keycloak-postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-postgres
  namespace: ayon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-postgres
  template:
    metadata:
      labels:
        app: keycloak-postgres
    spec:
      initContainers:
      - name: init-permissions
        image: busybox
        command: ['sh', '-c', 'chown -R 999:999 /var/lib/postgresql/data']
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: postgres-data
            mountPath: /var/lib/postgresql/data
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: keycloak-postgres-secret
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec: { command: ["pg_isready", "-U", "keycloak"] }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec: { command: ["pg_isready", "-U", "keycloak"] }
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: keycloak-postgres-pvc

---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin-secret
  namespace: ayon
type: Opaque
stringData:
  KEYCLOAK_ADMIN: admin
  KEYCLOAK_ADMIN_PASSWORD: admin
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: ayon
spec:
  selector:
    app: keycloak
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: ayon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.1
          args: ["start"]
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: KEYCLOAK_ADMIN
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-secret
                  key: KEYCLOAK_ADMIN_PASSWORD
            - name: KC_HOSTNAME
              value: keycloak.d2-india.com
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: keycloak-postgres
            - name: KC_DB_URL_DATABASE
              value: keycloak
            - name: KC_DB_USERNAME
              value: keycloak
            - name: KC_DB_PASSWORD
              value: keycloak
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_HTTP_ENABLED
              value: "true"
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  namespace: ayon
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - keycloak.d2-india.com
      secretName: keycloak-tls
  rules:
    - host: keycloak.d2-india.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080


# openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
#   -keyout keycloak.key \
#   -out keycloak.crt \
#   -subj "/CN=keycloak.d2-india.com/O=keycloak"

# kubectl create secret tls keycloak-tls \
#   --cert=keycloak.crt \
#   --key=keycloak.key \
#   -n ayon